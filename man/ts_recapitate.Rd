% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree-sequences.R
\name{ts_recapitate}
\alias{ts_recapitate}
\title{Recapitate the tree sequence}
\usage{
ts_recapitate(
  ts,
  recombination_rate,
  Ne,
  migration_matrix = NULL,
  random_seed = NULL
)
}
\arguments{
\item{ts}{Tree sequence object loaded by \code{ts_load}}

\item{recombination_rate}{A constant value of the recombination rate}

\item{Ne}{Effective population size during the recapitation process}

\item{migration_matrix}{Migration matrix used for coalescence of ancient lineages
(passed to \code{ts_recapitate})}

\item{random_seed}{Random seed passed to pyslim's \code{recapitate} method}
}
\value{
Tree-sequence object of the class \code{slendr_ts}, which serves as
an interface point for the Python module tskit using slendr functions with
the \code{ts_} prefix.
}
\description{
Recapitate the tree sequence
}
\examples{
# the examples will only run when a dedicated Python environment is present
# (this can be created by calling `setup_env()`)
if (check_env(quiet = TRUE)) {

# load an example model with an already simulated tree sequence
model <- read_example("introgression")

ts <-
  ts_load(model) \%>\%
  ts_recapitate(recombination_rate = 1e-8, Ne = 10000, random_seed = 42)

}

}
\seealso{
\code{\link{ts_nodes}} for extracting useful information about
individuals, nodes, coalescent times and geospatial locations of nodes on a
map
}
